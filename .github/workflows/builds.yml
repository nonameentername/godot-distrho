name: builds

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ${{ github.ref }}

jobs:
  common-build:
    name: Common build
    runs-on: ubuntu-latest
    env:
      VERSION: v1
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Bootstrap VCPKG
        run: ./vcpkg/bootstrap-vcpkg.sh

      - name: Build Dependencies
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/nonameentername/godot-distrho-ubuntu:${{ env.VERSION }}
          options: -v ${{ github.workspace }}:${{ github.workspace }} --workdir ${{ github.workspace }}
          run: |
            ./platform/ubuntu/build_capnproto.sh
            ./platform/ubuntu/build_schema.sh
            ./platform/ubuntu/build_godot.sh

      - name: Create cache for build
        uses: actions/cache@v4
        with:
          path: |
            src/godot_distrho_schema.capnp.cpp
            src/godot_distrho_schema.capnp.h
            godot-cpp/gdextension/extension_api.json
          key: common-artifacts-${{github.run_id}}

  linux-build:
    name: Linux/Ubuntu build
    runs-on: ubuntu-latest
    needs: common-build
    env:
      VERSION: v1
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Bootstrap VCPKG
        run: ./vcpkg/bootstrap-vcpkg.sh

      - name: Update minor version
        id: tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DRY_RUN: true

      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 6

      - name: Restore cache for build
        uses: actions/cache/restore@v4
        with:
          path: |
            src/godot_distrho_schema.capnp.cpp
            src/godot_distrho_schema.capnp.h
            godot-cpp/gdextension/extension_api.json
          key: common-artifacts-${{github.run_id}}

      - name: Build godot-distrho (Debug)
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/nonameentername/godot-distrho-ubuntu:${{ env.VERSION }}
          options: -v ${{ github.workspace }}:${{ github.workspace }} --workdir ${{ github.workspace }} -e BUILD_SHA -e TAG_VERSION
          run: |
            ./platform/ubuntu/build_debug.sh
        env:
          BUILD_SHA: ${{ steps.short-sha.outputs.sha }}
          TAG_VERSION: ${{ steps.tag.outputs.new_tag }}

      - name: Build godot-distrho (Release)
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/nonameentername/godot-distrho-ubuntu:${{ env.VERSION }}
          options: -v ${{ github.workspace }}:${{ github.workspace }} --workdir ${{ github.workspace }} -e BUILD_SHA -e TAG_VERSION
          run: |
            ./platform/ubuntu/build_release.sh
        env:
          BUILD_SHA: ${{ steps.short-sha.outputs.sha }}
          TAG_VERSION: ${{ steps.tag.outputs.new_tag }}

      - name: Create cache for build
        uses: actions/cache@v4
        with:
          path: addons/distrho/bin
          key: linux-artifacts-${{github.run_id}}

  macos-build-debug:
    if: false
    name: MacOS build (Debug)
    runs-on: ubuntu-latest
    needs: common-build
    env:
      VERSION: v1
    steps:
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@main
        with:
          docker-images: false

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Bootstrap VCPKG
        run: ./vcpkg/bootstrap-vcpkg.sh

      - name: Update minor version
        id: tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DRY_RUN: true

      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 6

      - name: Restore cache for build
        uses: actions/cache/restore@v4
        with:
          path: |
            src/godot_distrho_schema.capnp.cpp
            src/godot_distrho_schema.capnp.h
            godot-cpp/gdextension/extension_api.json
          key: common-artifacts-${{github.run_id}}

      - name: Build godot-distrho (Debug)
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/nonameentername/godot-distrho-osxcross:${{ env.VERSION }}
          options: -v ${{ github.workspace }}:${{ github.workspace }} --workdir ${{ github.workspace }} -e BUILD_SHA -e TAG_VERSION
          run: |
            ./platform/osxcross/build_debug.sh
        env:
          BUILD_SHA: ${{ steps.short-sha.outputs.sha }}
          TAG_VERSION: ${{ steps.tag.outputs.new_tag }}

      - name: Create cache for build
        uses: actions/cache@v4
        with:
          path: addons/distrho/bin
          key: macos-artifacts-debug-${{github.run_id}}

  macos-build-release:
    if: false
    name: MacOS build (Release)
    runs-on: ubuntu-latest
    needs: common-build
    env:
      VERSION: v1
    steps:
      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@main
        with:
          docker-images: false

      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Bootstrap VCPKG
        run: ./vcpkg/bootstrap-vcpkg.sh

      - name: Update minor version
        id: tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DRY_RUN: true

      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 6

      - name: Restore cache for build
        uses: actions/cache/restore@v4
        with:
          path: |
            src/godot_distrho_schema.capnp.cpp
            src/godot_distrho_schema.capnp.h
            godot-cpp/gdextension/extension_api.json
          key: common-artifacts-${{github.run_id}}

      - name: Build godot-distrho (Release)
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/nonameentername/godot-distrho-osxcross:${{ env.VERSION }}
          options: -v ${{ github.workspace }}:${{ github.workspace }} --workdir ${{ github.workspace }} -e BUILD_SHA -e TAG_VERSION
          run: |
            ./platform/osxcross/build_release.sh
        env:
          BUILD_SHA: ${{ steps.short-sha.outputs.sha }}
          TAG_VERSION: ${{ steps.tag.outputs.new_tag }}

      - name: Create cache for build
        uses: actions/cache@v4
        with:
          path: addons/distrho/bin
          key: macos-artifacts-release-${{github.run_id}}

  verify-linux-build:
    name: Verify Linux/Ubuntu build
    runs-on: ubuntu-latest
    needs: linux-build
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Restore cached Linux artifacts
        uses: actions/cache/restore@v4
        with:
          path: addons/distrho/bin
          key: linux-artifacts-${{github.run_id}}

      - name: Setup Godot
        uses: chickensoft-games/setup-godot@v2
        with:
          version: 4.4.1
          use-dotnet: false
          include-templates: false

      - name: Verify godot-distrho
        run: |
          godot --headless --import || true
          godot --headless --import || true
          godot --headless -s distrho_run_scene.gd 2> /dev/null | grep 'output result is 2'

  publish_artifacts:
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Publish Artifacts
    runs-on: ubuntu-latest
    needs: [verify-linux-build]
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Restore cached Linux artifacts
        uses: actions/cache/restore@v4
        with:
          path: addons/distrho/bin
          key: linux-artifacts-${{github.run_id}}

      - name: Update minor version
        id: tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          DRY_RUN: true

      - name: Zip godot-distrho artifact
        run: zip -r godot-distrho_${{ env.TAG_VERSION }}.zip ./addons/distrho
        env:
          TAG_VERSION: ${{ steps.tag.outputs.new_tag }}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: true
          token: ${{ github.token }}
          tag_name: ${{ env.TAG_VERSION }}
          generate_release_notes: true
          make_latest: true
          files: |
            godot-distrho_${{ env.TAG_VERSION }}.zip
        env:
          TAG_VERSION: ${{ steps.tag.outputs.new_tag }}
